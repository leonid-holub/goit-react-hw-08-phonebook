{"version":3,"file":"static/js/63.04818faa.chunk.js","mappings":"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","sources":["components/ContactsList/Form/Label/Label.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactsList/Form/Form.js","webpack://react-homework-template/./src/components/ContactsList/Contact/ChangeForm/ChangeForm.module.css?31c7","components/ContactsList/Contact/ChangeForm/ChangeForm.js","webpack://react-homework-template/./src/components/ContactsList/Contact/Contact.module.css?f695","components/ContactsList/Contact/Contact.js","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContacsList.js","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js","webpack://react-homework-template/./src/components/ContactsList/Form/Form.module.css?cf5b","webpack://react-homework-template/./src/components/ContactsList/Form/Label/Label.module.css?f43e"],"sourcesContent":["import css from './Label.module.css';\n\nconst Label = ({ labelName, children }) => {\n  return (\n    <label className={css.label}>\n      {labelName}\n      {children}\n    </label>\n  );\n};\n\nexport default Label;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const visibleContacts = createSelector(\n  [selectFilter, selectContacts],\n  (normilizeFilter, contacts) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizeFilter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectContacts } from 'redux/selectors';\nimport Label from './Label/Label';\nimport Button from './Button/Button';\nimport css from './Form.module.css';\n\nconst phonebookOptions = {\n  type: 'text',\n  name: 'name',\n  pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  title:\n    \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  required: '',\n};\n\nconst contactsOptions = {\n  type: 'tel',\n  name: 'number',\n  title:\n    'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  required: '',\n};\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const allContacts = useSelector(selectContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const submitChange = e => {\n    e.preventDefault();\n    const item = {\n      name: name,\n      number: number,\n    };\n    if (name && number && !allContacts.find(info => info.name === name)) {\n      dispatch(addContact(item));\n      setName('');\n      setNumber('');\n    } else if (name && !number) {\n      Notify.warning('Please enter the number', { position: 'center-top' });\n    } else if (!name && number) {\n      Notify.warning('Please enter the name', { position: 'center-top' });\n    }\n    if (allContacts.find(info => info.name === name)) {\n      Notify.warning(`${name} is already in contacts`, {\n        position: 'center-top',\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={submitChange} autoComplete=\"off\">\n      <Label labelName=\"Name\">\n        <input\n          className={css.input}\n          onChange={handleChangeName}\n          value={name}\n          {...phonebookOptions}\n        />\n      </Label>\n      <Label labelName=\"Number\">\n        <input\n          className={css.input}\n          onChange={handleChangeNumber}\n          value={number}\n          {...contactsOptions}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        />\n      </Label>\n      <Button type=\"submit\" textContent=\"Add contact\" />\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"changeForm\":\"ChangeForm_changeForm__lPTpH\"};","import { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { changeContact } from 'redux/operations';\nimport Button from 'components/ContactsList/Form/Button/Button';\nimport css from './ChangeForm.module.css';\n\nexport const ChangeForm = ({ closeChangeForm, id }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        closeChangeForm();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [closeChangeForm]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(changeContact({ name, number, id }));\n    setName('');\n    setNumber('');\n    closeChangeForm();\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.changeForm}>\n      <label>\n        Name{'   '}\n        <input\n          placeholder=\"Enter new name\"\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <label>\n        Number{'   '}\n        <input\n          placeholder=\"Enter new number\"\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <Button type=\"submit\" textContent=\"Done\" />\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"Contact_contacts__item__gzxmd\",\"paragraph\":\"Contact_paragraph__ne8uD\",\"buttons\":\"Contact_buttons__bkTsg\"};","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { deleteContact } from 'redux/operations';\nimport Button from 'components/ContactsList/Form/Button/Button';\nimport { ChangeForm } from './ChangeForm/ChangeForm';\nimport css from './Contact.module.css';\n\nconst Contact = ({ contactName, phoneNumber, id }) => {\n  const [isChanging, setIsChanging] = useState(false);\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  const handleChangeContact = () => {\n    setIsChanging(true);\n    Notify.info('Press \"Escape\" to close the edit form.', {\n      position: 'center-top',\n    });\n  };\n\n  const closeChangeForm = () => {\n    setIsChanging(false);\n  };\n\n  return (\n    <li className={css.contacts__item}>\n      <p className={css.paragraph}>\n        {contactName}: {phoneNumber}{' '}\n      </p>\n      {isChanging ? (\n        <ChangeForm closeChangeForm={closeChangeForm} id={id}></ChangeForm>\n      ) : (\n        <div className={css.buttons}>\n          <Button type=\"button\" textContent=\"Delete\" onClick={handleDelete} />\n          <Button\n            type=\"button\"\n            textContent=\"Edit\"\n            onClick={handleChangeContact}\n          />\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/filterSlice';\nimport Contact from './Contact/Contact';\nimport Label from 'components/ContactsList/Form/Label/Label';\nimport styles from './Form/Label/Label.module.css';\nimport { visibleContacts } from 'redux/selectors';\nimport css from './ContactsList.module.css';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const contactsArray = useSelector(visibleContacts);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(update(value));\n  };\n\n  return (\n    <>\n      <Label labelName=\"Find contacts by name\">\n        <input\n          className={styles.label}\n          type=\"text\"\n          onChange={handleChange}\n        ></input>\n      </Label>\n      <ul className={css.list}>\n        {contactsArray.map(contact => (\n          <Contact\n            key={contact.id}\n            contactName={contact.name}\n            phoneNumber={contact.number}\n            id={contact.id}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__JEEdl\",\"title\":\"Contacts_title__LxdN4\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport Form from 'components/ContactsList/Form/Form';\nimport ContactsList from 'components/ContactsList/ContacsList';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.section}>\n        <h2 className={css.title}>Phonebook</h2>\n        <Form />\n      </div>\n      {isLoading && !error && (\n        <b style={{ display: 'block', color: 'white', padding: '25px 50px' }}>\n          Request in progress...\n        </b>\n      )}\n      {!isLoading && !error && (\n        <div className={css.section}>\n          <h2 className={css.title}>Contacts</h2>\n          <ContactsList />\n        </div>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Form_input__WeyXG\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Label_label__MITv7\"};"],"names":["labelName","children","className","css","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","visibleContacts","filter","normilizeFilter","contact","toLowerCase","includes","phonebookOptions","type","pattern","title","required","contactsOptions","Form","useState","setName","number","setNumber","dispatch","useDispatch","allContacts","useSelector","onSubmit","e","preventDefault","item","info","addContact","Notify","position","autoComplete","Label","onChange","target","Button","textContent","ChangeForm","closeChangeForm","id","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","handleChange","changeContact","placeholder","contactName","phoneNumber","isChanging","setIsChanging","onClick","deleteContact","contactsArray","styles","update","Contacts","fetchContacts","style","display","color","padding"],"sourceRoot":""}